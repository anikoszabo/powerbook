[["index.html", "Power and Sample Size Manual Welcome", " Power and Sample Size Manual Aniko Szabo 2023-01-05 Welcome This repository is for a Bookdown version of a reference book for power and sample size calculations using R. It is very much a work in progress, and fixes/contributions in the form of pull requests are welcome. "],["one-sample-mean.html", "1 One-sample mean 1.1 Example 1.2 Data generating mechanism 1.3 Precision-based sample size 1.4 Power-based sample size 1.5 Getting inputs 1.6 Example revisited 1.7 Simulation study 1.8 Functions in R packages", " 1 One-sample mean 1.1 Example The Patient-Reported Outcomes Measurement Information System (PROMIS) provides validated questionnaires for a wide range of quality-of-life outcomes in the domains of physical, mental, and social health. The responses from a subject are summarized with a T-score, which has a mean 50 and standard deviation of 10 in the US general population. An investigator wants to study anxiety in the population of patients with cyclic vomiting syndrome (CVS) using the PROMIS Anxiety scale to see if they report more anxiety (ie higher T-scores on the scale) than the general population. How many subjects are needed? 1.2 Data generating mechanism 1.3 Precision-based sample size 1.4 Power-based sample size 1.4.1 Test statistic 1.4.2 Power formula 1.5 Getting inputs 1.6 Example revisited 1.7 Simulation study 1.8 Functions in R packages "],["one-sample-proportion.html", "2 One-sample proportion 2.1 Example 2.2 Data generating mechanism 2.3 Precision-based sample size 2.4 Power-based sample size 2.5 Getting inputs, worst/best case scenarios 2.6 Example revisited 2.7 Simulation study 2.8 Functions in R packages", " 2 One-sample proportion 2.1 Example An oncologist is developing a new treatment, and he wants to run a single arm phase II study to estimate the probability of response (partial or complete reduction in the size of the tumor) after four weeks of treatment. The current standard of care has a 30% response probability. How many subjects should he recruit? 2.2 Data generating mechanism Independent identically distributed variables \\(X_1, \\ldots, X_n \\sim Bernoulli(p)\\) with \\(p\\), the event probability as the parameter of interest. It will be estimated as the sample proportion \\(\\hat{p} = \\sum_{i=1}^n X_i / n\\). Inference can be based on the exact distribution of \\(X = \\sum_{i=1}^n X_i \\sim Binom(n,p)\\) or the asymptotic distribution of \\(\\hat{p} \\sim N(p, \\frac{p(1-p)}{n})\\). 2.3 Precision-based sample size The precision-based calculations are based on the standard error of \\(\\hat{p}\\): \\[\\begin{equation} SE(\\hat{p}) = \\sqrt\\frac{p(1-p)}{n} \\end{equation}\\] #&#39; Calculate standard error for given sample size, or vice versa. Exactly one of &#39;n&#39; and &#39;se&#39; has to be NULL #&#39; p - expected event probability #&#39; n - sample size #&#39; se - standard error of estimated probability prec.1prop &lt;- function(p, n=NULL, se=NULL){ if (is.null(n) &amp; !is.null(se)){ n &lt;- p * (1-p) / se^2 } else if (!is.null(n) &amp; is.null(se)){ se &lt;- sqrt(p*(1-p)/n) } else stop(&quot;Exactly one of &#39;n&#39; and &#39;se&#39; has to be NULL&quot;) res &lt;- list(p = p, n = n, se = se) res } 2.4 Power-based sample size The sample size can also be based on the power to test, at a significance level \\(\\alpha\\), the null hypothesis \\(H_0: p = p_0\\) versus the two-sided alternative \\(H_{a1}: p \\neq p_0\\), or the one-sided alternatives \\(H_{a2}: p &gt; p_0\\) or \\(H_{a3}: p &lt; p_0\\). Test statistic There are three commonly used tests: Exact binomial test with test statistic \\(X = \\sum_{i=1}^n X_i \\sim Binom(n,p_0)\\) under \\(H_0\\) One-sample Wald z-test with test statistic \\(Z_W = \\frac{\\hat{p} - p_0}{\\sqrt{\\hat{p}(1-\\hat{p})/n}} \\approx N(0,1)\\) under \\(H_0\\) One-sample Score z-test with test statistic \\(Z_S = \\frac{\\hat{p} - p_0}{\\sqrt{p_0(1-p_0)/n}} \\approx N(0,1)\\) under \\(H_0\\) Table (#tab:oneprop-rejection) Rejection regions for the tests Test \\(H_{a1}: p \\neq p_0\\) \\(H_{a2}: p &gt; p_0\\) \\(H_{a3}: p &lt; p_0\\) Exact binomial \\(X \\geq b_{\\frac{\\alpha}{2}; n,p_0}\\) or \\(X \\leq b_{1-\\frac{\\alpha}{2}; n,p_0}\\) \\(X \\geq b_{\\alpha; n,p_0}\\) \\(X \\leq b_{1-\\alpha; n,p_0}\\) Wald z-test \\(|Z_W| \\geq z_\\frac{\\alpha}{2}\\) \\(Z_W \\geq z_\\alpha\\) \\(Z_W \\leq -z_{\\alpha}\\) Score z-test \\(|Z_S| \\geq z_\\frac{\\alpha}{2}\\) \\(Z_S \\geq z_\\alpha\\) \\(Z_S \\leq -z_{\\alpha}\\) where \\(b_{\\alpha; n,p_0}\\) is the upper \\(\\alpha\\)th quantile of the \\(Binomial(n,p_0)\\) distribution, and \\(z_{\\alpha}\\) is the upper \\(\\alpha\\)th quantile of the \\(N(0,1)\\) distribution. Power formula The power for a specific alternative \\(p=p_1\\) are shown for the one-sided alternative hypothesis \\(H_{a2}\\). The formula for \\(H_{a3}\\) is a straightforward modification, while the power for the two-sided hypothesis is the sum of the powers for the two one-sided hypotheses using \\(\\alpha/2\\) instead of \\(\\alpha\\). Table (#tab:oneprop-power) Power for the tests Test Prob(rejecting \\(H_0\\) versus \\(H_{a2}\\)) Exact binomial \\(1 - F_{B(n,p_1)}(b_{\\frac{\\alpha}{2}; n,p_0})\\) Wald z-test \\(1 - \\Phi\\Big(z_\\alpha - \\frac{p_1 - p_0}{\\sqrt{p_1(1-p_1)/n}}\\Big)\\) Score z-test \\(1 - \\Phi\\Big(z_\\alpha \\sqrt{\\frac{p_0(1-p_0)}{p_1(1-p_1)}} - \\frac{p_1 - p_0}{\\sqrt{p_1(1-p_1)/n}}\\Big)\\) where \\(F_{B(n,p)}\\) is the cdf of the \\(Binomial(n,p)\\) distribution, and \\(\\Phi\\) is the cdf of the \\(N(0,1)\\) distribution. #&#39; Calculate power for given sample size, or vice versa. Exactly one of &#39;n&#39; and &#39;power&#39; has to be NULL #&#39; p0 - null hypothesis event probability #&#39; p1 - alternative hypothesis event probability #&#39; n - sample size #&#39; power - power to reject the null hypothesis #&#39; sig.level - significance level of test #&#39; alternative - type of alternative hypothesis #&#39; test - type of test power.1prop.test &lt;- function(p0, p1, n=NULL, power=NULL, sig.level=0.05, alternative=c(&quot;less&quot;,&quot;greater&quot;,&quot;two.sided&quot;), test = c(&quot;Wald&quot;,&quot;score&quot;,&quot;binomial&quot;)){ alternative &lt;- match.arg(alternative) sides &lt;- ifelse(alternative==&quot;two.sided&quot;, 2, 1) test &lt;- match.arg(test) if (test == &quot;binomial&quot;){ p.body.up &lt;- quote({ ba &lt;- qbinom(sig.level/sides, size = n, prob=p0, lower.tail=FALSE) pbinom(ba, size=n, prob=p1, lower.tail = FALSE)}) p.body.lo &lt;- quote({ ba &lt;- qbinom(sig.level/sides, size = n, prob=p0, lower.tail=TRUE) pbinom(ba, size=n, prob=p1, lower.tail = TRUE)}) } else { za &lt;- qnorm(sig.level/sides, lower.tail = FALSE) vratio &lt;- if (test == &quot;score&quot;){ sqrt(p0 * (1-p0) / (p1 * (1-p1)))} else 1 delta &lt;- (p0 - p1)/sqrt(p1*(1-p1)) p.body.up &lt;- quote({ pnorm(za * vratio + delta * sqrt(n), lower.tail = FALSE) }) p.body.lo &lt;- quote({ pnorm(-za * vratio + delta * sqrt(n), lower.tail = TRUE) }) } p.body &lt;- if (alternative==&quot;two.sided&quot;) call(&quot;+&quot;, p.body.lo, p.body.up) else if (alternative==&quot;greater&quot;) p.body.up else p.body.lo if (is.null(power) &amp; !is.null(n)){ power &lt;- eval(p.body) } else if (!is.null(power) &amp; is.null(n)){ if (test == &quot;binomial&quot;){ n &lt;- 1 found &lt;- FALSE while (!found &amp; n &lt;= 1e+7){ n &lt;- n+1 pw &lt;- eval(p.body) found &lt;- (pw &gt;= power) } power &lt;- pw } else { n &lt;- uniroot(function(n) eval(p.body) - power, c(2, 1e+07), tol = .Machine$double.eps^0.25, extendInt = &quot;upX&quot;)$root } } METHOD &lt;- paste( switch(test, Wald = &quot;Wald z&quot;, score = &quot;Score z&quot;, binomial = &quot;Exact binomial&quot;), &quot;test power calculation&quot;) structure(list(n = n, p0 = p0, p1 = p1, sig.level = sig.level, power = power, alternative = alternative, note = &quot;n is the number of independent samples&quot;, method = METHOD), class = &quot;power.htest&quot;) } 2.5 Getting inputs, worst/best case scenarios 2.6 Example revisited 2.7 Simulation study 2.8 Functions in R packages "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
